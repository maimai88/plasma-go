// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package chain

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// RootChainABI is the input ABI used to generate the binding from.
const RootChainABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exits\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentChildBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CHILD_BLOCK_INTERVAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentDepositBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentFeeExit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"exitsQueues\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"childChain\",\"outputs\":[{\"name\":\"root\",\"type\":\"bytes32\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"depositBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"exitor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"utxoPos\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExitStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BlockSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"submitBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_depositPos\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"startDepositExit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"startFeeExit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_utxoPos\",\"type\":\"uint256\"},{\"name\":\"_txBytes\",\"type\":\"bytes\"},{\"name\":\"_proof\",\"type\":\"bytes\"},{\"name\":\"_sigs\",\"type\":\"bytes\"}],\"name\":\"startExit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cUtxoPos\",\"type\":\"uint256\"},{\"name\":\"_eUtxoIndex\",\"type\":\"uint256\"},{\"name\":\"_txBytes\",\"type\":\"bytes\"},{\"name\":\"_proof\",\"type\":\"bytes\"},{\"name\":\"_sigs\",\"type\":\"bytes\"},{\"name\":\"_confirmationSig\",\"type\":\"bytes\"}],\"name\":\"challengeExit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"finalizeExits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hello\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getChildChain\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDepositBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_utxoPos\",\"type\":\"uint256\"}],\"name\":\"getExit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getNextExit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RootChainBin is the compiled bytecode used for deploying new contracts.
const RootChainBin = `0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e8600181905550600160028190555060016003819055506200007562000116565b604051809103906000f08015801562000092573d6000803e3d6000fd5b50600660008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000127565b60405161083b806200287c83390190565b61274580620001376000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806319ff1d211461011c5780631c91a6b91461014757806332773ba314610246578063342de1791461039557806340b8d53a1461043c578063570ca735146104895780637a95f1e8146104e05780637d7b20511461050b57806385444de31461054e5780638bfe0aec1461059e578063a831fa07146105fc578063a98c7f2c14610627578063baa4769414610652578063bcd5926114610683578063cfe7d855146106ae578063d0e30db0146106d9578063d11f045c146106e3578063e60f1ff114610766578063f82f7a4b1461080d578063f95643b114610864575b61011a6108b4565b005b34801561012857600080fd5b50610131610a5f565b6040518082815260200191505060405180910390f35b34801561015357600080fd5b5061024460048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a69565b005b34801561025257600080fd5b506103936004803603810190808035906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ce8565b005b3480156103a157600080fd5b506103c060048036038101908080359060200190929190505050610f43565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34801561044857600080fd5b50610487600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fad565b005b34801561049557600080fd5b5061049e61103a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ec57600080fd5b506104f561105f565b6040518082815260200191505060405180910390f35b34801561051757600080fd5b5061054c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611065565b005b34801561055a57600080fd5b50610579600480360381019080803590602001909291905050506114ce565b6040518083600019166000191681526020018281526020019250505060405180910390f35b3480156105aa57600080fd5b506105df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611508565b604051808381526020018281526020019250505060405180910390f35b34801561060857600080fd5b5061061161163e565b6040518082815260200191505060405180910390f35b34801561063357600080fd5b5061063c611644565b6040518082815260200191505060405180910390f35b34801561065e57600080fd5b50610681600480360381019080803560001916906020019092919050505061164a565b005b34801561068f57600080fd5b5061069861175f565b6040518082815260200191505060405180910390f35b3480156106ba57600080fd5b506106c3611791565b6040518082815260200191505060405180910390f35b6106e16108b4565b005b3480156106ef57600080fd5b50610724600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611797565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561077257600080fd5b50610791600480360381019080803590602001909291905050506117ca565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34801561081957600080fd5b5061086260048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611861565b005b34801561087057600080fd5b5061088f6004803603810190808035906020019092919050505061198d565b6040518083600019166000191681526020018281526020019250505060405180910390f35b6000806103e86002541015156108c957600080fd5b33600034604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040518091039020915061097061175f565b9050604080519081016040528083600019168152602001428152506004600083815260200190815260200160002060008201518160000190600019169055602082015181600101559050506109d160016002546119b190919063ffffffff16565b600281905550803373ffffffffffffffffffffffffffffffffffffffff167fd2f8022f659fd9c8c558f30c00fd5ee7038f7cb56da45095c3e0e7d48b3e0c4b600034604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35050565b60006103e8905090565b6000806000610a76612642565b600080633b9aca008a811515610a8857fe5b049550612710633b9aca008b811515610a9d57fe5b06811515610aa757fe5b0494506127108502633b9aca0087028b03039350610ace848a6119cf90919063ffffffff16565b9250826000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b0e57600080fd5b60046000878152602001908152602001600020600001549150886040518082805190602001908083835b602083101515610b5d5780518252602082019150602081019050602083039250610b38565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020610b978860006082611aef565b60405180836000191660001916815260200182805190602001908083835b602083101515610bda5780518252602082019150602081019050602083039250610bb5565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405180910390209050610c7c896040518082805190602001908083835b602083101515610c435780518252602082019150602081019050602083039250610c1e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208385606001518a611b7c565b1515610c8757600080fd5b610ca285838a8460001916611cd3909392919063ffffffff16565b1515610cad57600080fd5b610cdc8a846000015185602001518660400151600460008c815260200190815260200160002060010154611db0565b50505050505050505050565b6000806000806000806000610d068c8c61211190919063ffffffff16565b9650612710633b9aca008e811515610d1a57fe5b06811515610d2457fe5b04955060046000633b9aca008f811515610d3a57fe5b0481526020019081526020016000206000015494508a6040518082805190602001908083835b602083101515610d855780518252602082019150602081019050602083039250610d60565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209350838560405180836000191660001916815260200182600019166000191681526020019250505060405180910390209250838960405180836000191660001916815260200182805190602001908083835b602083101515610e295780518252602082019150602081019050602083039250610e04565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051809103902091506005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610e9c83896121a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610ed557600080fd5b610ef086868c8560001916611cd3909392919063ffffffff16565b1515610efb57600080fd5b6005600088815260200190815260200160002060000160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550505050505050505050505050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100857600080fd5b61101a60035433848460014201611db0565b61103060016003546119b190919063ffffffff16565b6003819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080611070612697565b600061107b85611508565b809450819550505060056000858152602001908152602001600020606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b428310156114c65760056000858152602001908152602001600020606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505091508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff161415156112d757600080fd5b816000015173ffffffffffffffffffffffffffffffffffffffff166108fc83604001519081150290604051600060405180830381858888f19350505050158015611325573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff1663b07576ac6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561138a57600080fd5b505af115801561139e573d6000803e3d6000fd5b505050506040513d60208110156113b457600080fd5b8101908080519060200190929190505050506005600085815260200190815260200160002060000160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560008173ffffffffffffffffffffffffffffffffffffffff1663bda1504b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561146557600080fd5b505af1158015611479573d6000803e3d6000fd5b505050506040513d602081101561148f57600080fd5b810190808051906020019092919050505011156114bc576114af85611508565b80945081955050506114c1565b6114c7565b6111bd565b5b5050505050565b6000806004600084815260200190815260200160002060000154600460008581526020019081526020016000206001015491509150915091565b6000806000806000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d6362e976040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156115d357600080fd5b505af11580156115e7573d6000803e3d6000fd5b505050506040513d60208110156115fd57600080fd5b81019080805190602001909291905050509250826fffffffffffffffffffffffffffffffff1691506080839060020a90049050818194509450505050915091565b6103e881565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116a557600080fd5b6040805190810160405280826000191681526020014281525060046000600154815260200190815260200160002060008201518160000190600019169055602082015181600101559050506117076103e86001546119b190919063ffffffff16565b60018190555060016002819055507f3be20e672590051e92360aa9dd9247e52541ad35d7a0297ff9e0f94e993295e981426040518083600019166000191681526020018281526020019250505060405180910390a150565b600061178c60025461177e6103e860015461229d90919063ffffffff16565b6119b190919063ffffffff16565b905090565b60035481565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006005600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660056000878152602001908152602001600020600201549250925092509193909250565b6000806000633b9aca008681151561187557fe5b04925060006103e88481151561188757fe5b061415151561189557600080fd5b60046000848152602001908152602001600020600001549150338585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018281526020019350505050604051809103902090508060001916826000191614151561196257600080fd5b611985863387876004600089815260200190815260200160002060010154611db0565b505050505050565b60046020528060005260406000206000915090508060000154908060010154905082565b60008082840190508381101515156119c557fe5b8091505092915050565b6119d7612642565b60606119ea6119e5856122b6565b61230c565b9050608060405190810160405280611a1e8386600202600701815181101515611a0f57fe5b906020019060200201516123e8565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a5a836006815181101515611a4b57fe5b906020019060200201516123e8565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a9b8386600202600801815181101515611a8c57fe5b9060200190602002015161241f565b8152602001611ac1836003815181101515611ab257fe5b9060200190602002015161241f565b611ae2846000815181101515611ad357fe5b9060200190602002015161241f565b0281525091505092915050565b606080828401855110151515611b0457600080fd5b821560008114611b1f57604051915060208201604052611b70565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015611b5d5780518352602083019250602081019050611b40565b50868552601f19601f8301166040525050505b50809150509392505050565b6000606080606060008060006060600060418a51811515611b9957fe5b06148015611baa5750610104895111155b1515611bb557600080fd5b611bc28960006041611aef565b9650611bd089604180611aef565b9550611bdf8960826041611aef565b94508b8b604051808360001916600019168152602001826000191660001916815260200192505050604051809103902093506001925060019150611c2384866121a5565b73ffffffffffffffffffffffffffffffffffffffff16611c438d896121a5565b73ffffffffffffffffffffffffffffffffffffffff1614925060008a1115611cb857611c728960c36041611aef565b9050611c7e84826121a5565b73ffffffffffffffffffffffffffffffffffffffff16611c9e8d886121a5565b73ffffffffffffffffffffffffffffffffffffffff161491505b828015611cc25750815b975050505050505050949350505050565b6000806000806102008551141515611cea57600080fd5b879150602090505b61020081111515611d98578085015192506000600288811515611d1157fe5b061415611d4d57818360405180836000191660001916815260200182600019166000191681526020019250505060405180910390209150611d7e565b8282604051808360001916600019168152602001826000191660001916815260200192505050604051809103902091505b600287811515611d8a57fe5b049650602081019050611cf2565b85600019168260001916149350505050949350505050565b60008060008073ffffffffffffffffffffffffffffffffffffffff16600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611e4f57600080fd5b611e6362127500850162093a804201612461565b9250876080849060020a02179150600085111515611e8057600080fd5b6000600560008a815260200190815260200160002060020154141515611ea557600080fd5b600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166390b5561d836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015611f7657600080fd5b505af1158015611f8a573d6000803e3d6000fd5b505050506060604051908101604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815250600560008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050873373ffffffffffffffffffffffffffffffffffffffff167ff0537507c0bb9b823a1e4f5522ed9f25512618d4d169c9eb70a5ee2e9fb8bd578888604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35050505050505050565b600060606000612128612123866122b6565b61230c565b9150600384029050612153828260020181518110151561214457fe5b9060200190602002015161241f565b612176838360010181518110151561216757fe5b9060200190602002015161241f565b612199848460000181518110151561218a57fe5b9060200190602002015161241f565b01019250505092915050565b600080600080604185511415156121bf5760009350612294565b6020850151925060408501519150606085015160001a9050601b8160ff1610156121ea57601b810190505b601b8160ff16141580156122025750601c8160ff1614155b156122105760009350612294565b600186828585604051600081526020016040526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000865af1158015612287573d6000803e3d6000fd5b5050506020604051035193505b50505092915050565b60008282111515156122ab57fe5b818303905092915050565b6122be6126e5565b600080835114156122e75760408051908101604052806000815260200160008152509150612306565b6020830190506040805190810160405280845181526020018281525091505b50919050565b606060008060008061231d8661247b565b151561232857600080fd5b612331866124b2565b93508360405190808252806020026020018201604052801561236d57816020015b61235a6126ff565b8152602001906001900390816123525790505b50945061237d866020015161250c565b8660200151019250600090505b838110156123df5761239b83612592565b915060408051908101604052808381526020018481525085828151811015156123c057fe5b906020019060200201819052508183019250808060010191505061238a565b50505050919050565b60008060006015846000015114151561240057600080fd5b60018460200151019150600c6101000a82510490508092505050919050565b6000806000806000612434866020015161250c565b9350838660000151039250838660200151019150826020036101000a825104905080945050505050919050565b6000818310156124715781612473565b825b905092915050565b600080600083602001519050805160001a915060c060ff168260ff1610156124a657600092506124ab565b600192505b5050919050565b600080600080600092506124c9856020015161250c565b8560200151019150846000015185602001510190505b80821015612501576124f082612592565b8201915082806001019350506124df565b829350505050919050565b600080825160001a9050608060ff1681101561252b576000915061258c565b60b860ff16811080612550575060c060ff16811015801561254f575060f860ff1681105b5b1561255e576001915061258c565b60c060ff1681101561257d5760018060b80360ff16820301915061258c565b60018060f80360ff1682030191505b50919050565b600080825160001a9050608060ff168110156125b1576001915061263c565b60b860ff168110156125ce576001608060ff16820301915061263c565b60c060ff168110156125fe5760b78103600184019350806020036101000a8451046001820181019350505061263b565b60f860ff1681101561261b57600160c060ff16820301915061263c565b60f78103600184019350806020036101000a845104600182018101935050505b5b50919050565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604080519081016040528060008152602001600081525090565b6040805190810160405280600081526020016000815250905600a165627a7a723058208d7e66d6db28ace3452cc7e821104d02ee6826c7c113f5ec29eaa4e719d428d40029608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602060405190810160405280600060ff168152506001906001610075929190610083565b5060006002819055506100fa565b8280548282559060005260206000209081019282156100c4579160200282015b828111156100c3578251829060ff169055916020019190600101906100a3565b5b5090506100d191906100d5565b5090565b6100f791905b808211156100f35760008160009055506001016100db565b5090565b90565b610732806101096000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632dcdcd0c1461007257806390b5561d146100b3578063b07576ac146100e0578063bda1504b1461010b578063d6362e9714610136575b600080fd5b34801561007e57600080fd5b5061009d60048036038101908080359060200190929190505050610161565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b506100de6004803603810190808035906020019092919050505061026b565b005b3480156100ec57600080fd5b506100f561031c565b6040518082815260200191505060405180910390f35b34801561011757600080fd5b50610120610441565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b610447565b6040518082815260200191505060405180910390f35b600060025461018d600161017f60028661046890919063ffffffff16565b6104a390919063ffffffff16565b11156101ae576101a760028361046890919063ffffffff16565b9050610266565b60016101d760016101c960028661046890919063ffffffff16565b6104a390919063ffffffff16565b8154811015156101e357fe5b9060005260206000200154600161020460028561046890919063ffffffff16565b81548110151561021057fe5b9060005260206000200154101561023c5761023560028361046890919063ffffffff16565b9050610266565b610263600161025560028561046890919063ffffffff16565b6104a390919063ffffffff16565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102c657600080fd5b600181908060018154018082558091505090600182039060005260206000200160009091929091909150555061030860016002546104a390919063ffffffff16565b6002819055506103196002546104c1565b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561037a57600080fd5b60018081548110151561038957fe5b9060005260206000200154905060016002548154811015156103a757fe5b90600052602060002001546001808154811015156103c157fe5b906000526020600020018190555060016002548154811015156103e057fe5b906000526020600020016000905561040460016002546105aa90919063ffffffff16565b60028190555061041460016105c3565b61042c600180805490506105aa90919063ffffffff16565b60018161043991906106b5565b508091505090565b60025481565b600060018081548110151561045857fe5b9060005260206000200154905090565b600080600084141561047d576000915061049c565b828402905082848281151561048e57fe5b0414151561049857fe5b8091505b5092915050565b60008082840190508381101515156104b757fe5b8091505092915050565b6000808291506001838154811015156104d657fe5b906000526020600020015490505b60016104fa60028561069a90919063ffffffff16565b81548110151561050657fe5b906000526020600020015481101561057d57600161052e60028561069a90919063ffffffff16565b81548110151561053a57fe5b906000526020600020015460018481548110151561055457fe5b906000526020600020018190555061057660028461069a90919063ffffffff16565b92506104e4565b81831415156105a5578060018481548110151561059657fe5b90600052602060002001819055505b505050565b60008282111515156105b857fe5b818303905092915050565b60008060008392506001848154811015156105da57fe5b906000526020600020015491506105f084610161565b90505b600254811115801561061d575060018181548110151561060f57fe5b906000526020600020015482115b1561066c5760018181548110151561063157fe5b906000526020600020015460018581548110151561064b57fe5b906000526020600020018190555080935061066584610161565b90506105f3565b8284141515610694578160018581548110151561068557fe5b90600052602060002001819055505b50505050565b60008082848115156106a857fe5b0490508091505092915050565b8154818355818111156106dc578183600052602060002091820191016106db91906106e1565b5b505050565b61070391905b808211156106ff5760008160009055506001016106e7565b5090565b905600a165627a7a7230582012d436ed3886f28df64ba417dedd5852f33403af6ac0b808dcff5388191ec9ed0029`

// DeployRootChain deploys a new Ethereum contract, binding an instance of RootChain to it.
func DeployRootChain(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *RootChain, error) {
	parsed, err := abi.JSON(strings.NewReader(RootChainABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RootChainBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RootChain{RootChainCaller: RootChainCaller{contract: contract}, RootChainTransactor: RootChainTransactor{contract: contract}, RootChainFilterer: RootChainFilterer{contract: contract}}, nil
}

// RootChain is an auto generated Go binding around an Ethereum contract.
type RootChain struct {
	RootChainCaller     // Read-only binding to the contract
	RootChainTransactor // Write-only binding to the contract
	RootChainFilterer   // Log filterer for contract events
}

// RootChainCaller is an auto generated read-only Go binding around an Ethereum contract.
type RootChainCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootChainTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RootChainTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootChainFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RootChainFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootChainSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RootChainSession struct {
	Contract     *RootChain        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RootChainCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RootChainCallerSession struct {
	Contract *RootChainCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// RootChainTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RootChainTransactorSession struct {
	Contract     *RootChainTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// RootChainRaw is an auto generated low-level Go binding around an Ethereum contract.
type RootChainRaw struct {
	Contract *RootChain // Generic contract binding to access the raw methods on
}

// RootChainCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RootChainCallerRaw struct {
	Contract *RootChainCaller // Generic read-only contract binding to access the raw methods on
}

// RootChainTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RootChainTransactorRaw struct {
	Contract *RootChainTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRootChain creates a new instance of RootChain, bound to a specific deployed contract.
func NewRootChain(address common.Address, backend bind.ContractBackend) (*RootChain, error) {
	contract, err := bindRootChain(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RootChain{RootChainCaller: RootChainCaller{contract: contract}, RootChainTransactor: RootChainTransactor{contract: contract}, RootChainFilterer: RootChainFilterer{contract: contract}}, nil
}

// NewRootChainCaller creates a new read-only instance of RootChain, bound to a specific deployed contract.
func NewRootChainCaller(address common.Address, caller bind.ContractCaller) (*RootChainCaller, error) {
	contract, err := bindRootChain(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RootChainCaller{contract: contract}, nil
}

// NewRootChainTransactor creates a new write-only instance of RootChain, bound to a specific deployed contract.
func NewRootChainTransactor(address common.Address, transactor bind.ContractTransactor) (*RootChainTransactor, error) {
	contract, err := bindRootChain(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RootChainTransactor{contract: contract}, nil
}

// NewRootChainFilterer creates a new log filterer instance of RootChain, bound to a specific deployed contract.
func NewRootChainFilterer(address common.Address, filterer bind.ContractFilterer) (*RootChainFilterer, error) {
	contract, err := bindRootChain(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RootChainFilterer{contract: contract}, nil
}

// bindRootChain binds a generic wrapper to an already deployed contract.
func bindRootChain(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RootChainABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RootChain *RootChainRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RootChain.Contract.RootChainCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RootChain *RootChainRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RootChain.Contract.RootChainTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RootChain *RootChainRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RootChain.Contract.RootChainTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RootChain *RootChainCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _RootChain.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RootChain *RootChainTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RootChain.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RootChain *RootChainTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RootChain.Contract.contract.Transact(opts, method, params...)
}

// CHILDBLOCKINTERVAL is a free data retrieval call binding the contract method 0xa831fa07.
//
// Solidity: function CHILD_BLOCK_INTERVAL() constant returns(uint256)
func (_RootChain *RootChainCaller) CHILDBLOCKINTERVAL(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "CHILD_BLOCK_INTERVAL")
	return *ret0, err
}

// CHILDBLOCKINTERVAL is a free data retrieval call binding the contract method 0xa831fa07.
//
// Solidity: function CHILD_BLOCK_INTERVAL() constant returns(uint256)
func (_RootChain *RootChainSession) CHILDBLOCKINTERVAL() (*big.Int, error) {
	return _RootChain.Contract.CHILDBLOCKINTERVAL(&_RootChain.CallOpts)
}

// CHILDBLOCKINTERVAL is a free data retrieval call binding the contract method 0xa831fa07.
//
// Solidity: function CHILD_BLOCK_INTERVAL() constant returns(uint256)
func (_RootChain *RootChainCallerSession) CHILDBLOCKINTERVAL() (*big.Int, error) {
	return _RootChain.Contract.CHILDBLOCKINTERVAL(&_RootChain.CallOpts)
}

// ChildChain is a free data retrieval call binding the contract method 0xf95643b1.
//
// Solidity: function childChain( uint256) constant returns(root bytes32, timestamp uint256)
func (_RootChain *RootChainCaller) ChildChain(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Root      [32]byte
	Timestamp *big.Int
}, error) {
	ret := new(struct {
		Root      [32]byte
		Timestamp *big.Int
	})
	out := ret
	err := _RootChain.contract.Call(opts, out, "childChain", arg0)
	return *ret, err
}

// ChildChain is a free data retrieval call binding the contract method 0xf95643b1.
//
// Solidity: function childChain( uint256) constant returns(root bytes32, timestamp uint256)
func (_RootChain *RootChainSession) ChildChain(arg0 *big.Int) (struct {
	Root      [32]byte
	Timestamp *big.Int
}, error) {
	return _RootChain.Contract.ChildChain(&_RootChain.CallOpts, arg0)
}

// ChildChain is a free data retrieval call binding the contract method 0xf95643b1.
//
// Solidity: function childChain( uint256) constant returns(root bytes32, timestamp uint256)
func (_RootChain *RootChainCallerSession) ChildChain(arg0 *big.Int) (struct {
	Root      [32]byte
	Timestamp *big.Int
}, error) {
	return _RootChain.Contract.ChildChain(&_RootChain.CallOpts, arg0)
}

// CurrentChildBlock is a free data retrieval call binding the contract method 0x7a95f1e8.
//
// Solidity: function currentChildBlock() constant returns(uint256)
func (_RootChain *RootChainCaller) CurrentChildBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "currentChildBlock")
	return *ret0, err
}

// CurrentChildBlock is a free data retrieval call binding the contract method 0x7a95f1e8.
//
// Solidity: function currentChildBlock() constant returns(uint256)
func (_RootChain *RootChainSession) CurrentChildBlock() (*big.Int, error) {
	return _RootChain.Contract.CurrentChildBlock(&_RootChain.CallOpts)
}

// CurrentChildBlock is a free data retrieval call binding the contract method 0x7a95f1e8.
//
// Solidity: function currentChildBlock() constant returns(uint256)
func (_RootChain *RootChainCallerSession) CurrentChildBlock() (*big.Int, error) {
	return _RootChain.Contract.CurrentChildBlock(&_RootChain.CallOpts)
}

// CurrentDepositBlock is a free data retrieval call binding the contract method 0xa98c7f2c.
//
// Solidity: function currentDepositBlock() constant returns(uint256)
func (_RootChain *RootChainCaller) CurrentDepositBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "currentDepositBlock")
	return *ret0, err
}

// CurrentDepositBlock is a free data retrieval call binding the contract method 0xa98c7f2c.
//
// Solidity: function currentDepositBlock() constant returns(uint256)
func (_RootChain *RootChainSession) CurrentDepositBlock() (*big.Int, error) {
	return _RootChain.Contract.CurrentDepositBlock(&_RootChain.CallOpts)
}

// CurrentDepositBlock is a free data retrieval call binding the contract method 0xa98c7f2c.
//
// Solidity: function currentDepositBlock() constant returns(uint256)
func (_RootChain *RootChainCallerSession) CurrentDepositBlock() (*big.Int, error) {
	return _RootChain.Contract.CurrentDepositBlock(&_RootChain.CallOpts)
}

// CurrentFeeExit is a free data retrieval call binding the contract method 0xcfe7d855.
//
// Solidity: function currentFeeExit() constant returns(uint256)
func (_RootChain *RootChainCaller) CurrentFeeExit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "currentFeeExit")
	return *ret0, err
}

// CurrentFeeExit is a free data retrieval call binding the contract method 0xcfe7d855.
//
// Solidity: function currentFeeExit() constant returns(uint256)
func (_RootChain *RootChainSession) CurrentFeeExit() (*big.Int, error) {
	return _RootChain.Contract.CurrentFeeExit(&_RootChain.CallOpts)
}

// CurrentFeeExit is a free data retrieval call binding the contract method 0xcfe7d855.
//
// Solidity: function currentFeeExit() constant returns(uint256)
func (_RootChain *RootChainCallerSession) CurrentFeeExit() (*big.Int, error) {
	return _RootChain.Contract.CurrentFeeExit(&_RootChain.CallOpts)
}

// Exits is a free data retrieval call binding the contract method 0x342de179.
//
// Solidity: function exits( uint256) constant returns(owner address, token address, amount uint256)
func (_RootChain *RootChainCaller) Exits(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Owner  common.Address
	Token  common.Address
	Amount *big.Int
}, error) {
	ret := new(struct {
		Owner  common.Address
		Token  common.Address
		Amount *big.Int
	})
	out := ret
	err := _RootChain.contract.Call(opts, out, "exits", arg0)
	return *ret, err
}

// Exits is a free data retrieval call binding the contract method 0x342de179.
//
// Solidity: function exits( uint256) constant returns(owner address, token address, amount uint256)
func (_RootChain *RootChainSession) Exits(arg0 *big.Int) (struct {
	Owner  common.Address
	Token  common.Address
	Amount *big.Int
}, error) {
	return _RootChain.Contract.Exits(&_RootChain.CallOpts, arg0)
}

// Exits is a free data retrieval call binding the contract method 0x342de179.
//
// Solidity: function exits( uint256) constant returns(owner address, token address, amount uint256)
func (_RootChain *RootChainCallerSession) Exits(arg0 *big.Int) (struct {
	Owner  common.Address
	Token  common.Address
	Amount *big.Int
}, error) {
	return _RootChain.Contract.Exits(&_RootChain.CallOpts, arg0)
}

// ExitsQueues is a free data retrieval call binding the contract method 0xd11f045c.
//
// Solidity: function exitsQueues( address) constant returns(address)
func (_RootChain *RootChainCaller) ExitsQueues(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "exitsQueues", arg0)
	return *ret0, err
}

// ExitsQueues is a free data retrieval call binding the contract method 0xd11f045c.
//
// Solidity: function exitsQueues( address) constant returns(address)
func (_RootChain *RootChainSession) ExitsQueues(arg0 common.Address) (common.Address, error) {
	return _RootChain.Contract.ExitsQueues(&_RootChain.CallOpts, arg0)
}

// ExitsQueues is a free data retrieval call binding the contract method 0xd11f045c.
//
// Solidity: function exitsQueues( address) constant returns(address)
func (_RootChain *RootChainCallerSession) ExitsQueues(arg0 common.Address) (common.Address, error) {
	return _RootChain.Contract.ExitsQueues(&_RootChain.CallOpts, arg0)
}

// GetChildChain is a free data retrieval call binding the contract method 0x85444de3.
//
// Solidity: function getChildChain(_blockNumber uint256) constant returns(bytes32, uint256)
func (_RootChain *RootChainCaller) GetChildChain(opts *bind.CallOpts, _blockNumber *big.Int) ([32]byte, *big.Int, error) {
	var (
		ret0 = new([32]byte)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _RootChain.contract.Call(opts, out, "getChildChain", _blockNumber)
	return *ret0, *ret1, err
}

// GetChildChain is a free data retrieval call binding the contract method 0x85444de3.
//
// Solidity: function getChildChain(_blockNumber uint256) constant returns(bytes32, uint256)
func (_RootChain *RootChainSession) GetChildChain(_blockNumber *big.Int) ([32]byte, *big.Int, error) {
	return _RootChain.Contract.GetChildChain(&_RootChain.CallOpts, _blockNumber)
}

// GetChildChain is a free data retrieval call binding the contract method 0x85444de3.
//
// Solidity: function getChildChain(_blockNumber uint256) constant returns(bytes32, uint256)
func (_RootChain *RootChainCallerSession) GetChildChain(_blockNumber *big.Int) ([32]byte, *big.Int, error) {
	return _RootChain.Contract.GetChildChain(&_RootChain.CallOpts, _blockNumber)
}

// GetDepositBlock is a free data retrieval call binding the contract method 0xbcd59261.
//
// Solidity: function getDepositBlock() constant returns(uint256)
func (_RootChain *RootChainCaller) GetDepositBlock(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "getDepositBlock")
	return *ret0, err
}

// GetDepositBlock is a free data retrieval call binding the contract method 0xbcd59261.
//
// Solidity: function getDepositBlock() constant returns(uint256)
func (_RootChain *RootChainSession) GetDepositBlock() (*big.Int, error) {
	return _RootChain.Contract.GetDepositBlock(&_RootChain.CallOpts)
}

// GetDepositBlock is a free data retrieval call binding the contract method 0xbcd59261.
//
// Solidity: function getDepositBlock() constant returns(uint256)
func (_RootChain *RootChainCallerSession) GetDepositBlock() (*big.Int, error) {
	return _RootChain.Contract.GetDepositBlock(&_RootChain.CallOpts)
}

// GetExit is a free data retrieval call binding the contract method 0xe60f1ff1.
//
// Solidity: function getExit(_utxoPos uint256) constant returns(address, address, uint256)
func (_RootChain *RootChainCaller) GetExit(opts *bind.CallOpts, _utxoPos *big.Int) (common.Address, common.Address, *big.Int, error) {
	var (
		ret0 = new(common.Address)
		ret1 = new(common.Address)
		ret2 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _RootChain.contract.Call(opts, out, "getExit", _utxoPos)
	return *ret0, *ret1, *ret2, err
}

// GetExit is a free data retrieval call binding the contract method 0xe60f1ff1.
//
// Solidity: function getExit(_utxoPos uint256) constant returns(address, address, uint256)
func (_RootChain *RootChainSession) GetExit(_utxoPos *big.Int) (common.Address, common.Address, *big.Int, error) {
	return _RootChain.Contract.GetExit(&_RootChain.CallOpts, _utxoPos)
}

// GetExit is a free data retrieval call binding the contract method 0xe60f1ff1.
//
// Solidity: function getExit(_utxoPos uint256) constant returns(address, address, uint256)
func (_RootChain *RootChainCallerSession) GetExit(_utxoPos *big.Int) (common.Address, common.Address, *big.Int, error) {
	return _RootChain.Contract.GetExit(&_RootChain.CallOpts, _utxoPos)
}

// GetNextExit is a free data retrieval call binding the contract method 0x8bfe0aec.
//
// Solidity: function getNextExit(_token address) constant returns(uint256, uint256)
func (_RootChain *RootChainCaller) GetNextExit(opts *bind.CallOpts, _token common.Address) (*big.Int, *big.Int, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _RootChain.contract.Call(opts, out, "getNextExit", _token)
	return *ret0, *ret1, err
}

// GetNextExit is a free data retrieval call binding the contract method 0x8bfe0aec.
//
// Solidity: function getNextExit(_token address) constant returns(uint256, uint256)
func (_RootChain *RootChainSession) GetNextExit(_token common.Address) (*big.Int, *big.Int, error) {
	return _RootChain.Contract.GetNextExit(&_RootChain.CallOpts, _token)
}

// GetNextExit is a free data retrieval call binding the contract method 0x8bfe0aec.
//
// Solidity: function getNextExit(_token address) constant returns(uint256, uint256)
func (_RootChain *RootChainCallerSession) GetNextExit(_token common.Address) (*big.Int, *big.Int, error) {
	return _RootChain.Contract.GetNextExit(&_RootChain.CallOpts, _token)
}

// Hello is a free data retrieval call binding the contract method 0x19ff1d21.
//
// Solidity: function hello() constant returns(uint256)
func (_RootChain *RootChainCaller) Hello(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "hello")
	return *ret0, err
}

// Hello is a free data retrieval call binding the contract method 0x19ff1d21.
//
// Solidity: function hello() constant returns(uint256)
func (_RootChain *RootChainSession) Hello() (*big.Int, error) {
	return _RootChain.Contract.Hello(&_RootChain.CallOpts)
}

// Hello is a free data retrieval call binding the contract method 0x19ff1d21.
//
// Solidity: function hello() constant returns(uint256)
func (_RootChain *RootChainCallerSession) Hello() (*big.Int, error) {
	return _RootChain.Contract.Hello(&_RootChain.CallOpts)
}

// Operator is a free data retrieval call binding the contract method 0x570ca735.
//
// Solidity: function operator() constant returns(address)
func (_RootChain *RootChainCaller) Operator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _RootChain.contract.Call(opts, out, "operator")
	return *ret0, err
}

// Operator is a free data retrieval call binding the contract method 0x570ca735.
//
// Solidity: function operator() constant returns(address)
func (_RootChain *RootChainSession) Operator() (common.Address, error) {
	return _RootChain.Contract.Operator(&_RootChain.CallOpts)
}

// Operator is a free data retrieval call binding the contract method 0x570ca735.
//
// Solidity: function operator() constant returns(address)
func (_RootChain *RootChainCallerSession) Operator() (common.Address, error) {
	return _RootChain.Contract.Operator(&_RootChain.CallOpts)
}

// ChallengeExit is a paid mutator transaction binding the contract method 0x32773ba3.
//
// Solidity: function challengeExit(_cUtxoPos uint256, _eUtxoIndex uint256, _txBytes bytes, _proof bytes, _sigs bytes, _confirmationSig bytes) returns()
func (_RootChain *RootChainTransactor) ChallengeExit(opts *bind.TransactOpts, _cUtxoPos *big.Int, _eUtxoIndex *big.Int, _txBytes []byte, _proof []byte, _sigs []byte, _confirmationSig []byte) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "challengeExit", _cUtxoPos, _eUtxoIndex, _txBytes, _proof, _sigs, _confirmationSig)
}

// ChallengeExit is a paid mutator transaction binding the contract method 0x32773ba3.
//
// Solidity: function challengeExit(_cUtxoPos uint256, _eUtxoIndex uint256, _txBytes bytes, _proof bytes, _sigs bytes, _confirmationSig bytes) returns()
func (_RootChain *RootChainSession) ChallengeExit(_cUtxoPos *big.Int, _eUtxoIndex *big.Int, _txBytes []byte, _proof []byte, _sigs []byte, _confirmationSig []byte) (*types.Transaction, error) {
	return _RootChain.Contract.ChallengeExit(&_RootChain.TransactOpts, _cUtxoPos, _eUtxoIndex, _txBytes, _proof, _sigs, _confirmationSig)
}

// ChallengeExit is a paid mutator transaction binding the contract method 0x32773ba3.
//
// Solidity: function challengeExit(_cUtxoPos uint256, _eUtxoIndex uint256, _txBytes bytes, _proof bytes, _sigs bytes, _confirmationSig bytes) returns()
func (_RootChain *RootChainTransactorSession) ChallengeExit(_cUtxoPos *big.Int, _eUtxoIndex *big.Int, _txBytes []byte, _proof []byte, _sigs []byte, _confirmationSig []byte) (*types.Transaction, error) {
	return _RootChain.Contract.ChallengeExit(&_RootChain.TransactOpts, _cUtxoPos, _eUtxoIndex, _txBytes, _proof, _sigs, _confirmationSig)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() returns()
func (_RootChain *RootChainTransactor) Deposit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "deposit")
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() returns()
func (_RootChain *RootChainSession) Deposit() (*types.Transaction, error) {
	return _RootChain.Contract.Deposit(&_RootChain.TransactOpts)
}

// Deposit is a paid mutator transaction binding the contract method 0xd0e30db0.
//
// Solidity: function deposit() returns()
func (_RootChain *RootChainTransactorSession) Deposit() (*types.Transaction, error) {
	return _RootChain.Contract.Deposit(&_RootChain.TransactOpts)
}

// FinalizeExits is a paid mutator transaction binding the contract method 0x7d7b2051.
//
// Solidity: function finalizeExits(_token address) returns()
func (_RootChain *RootChainTransactor) FinalizeExits(opts *bind.TransactOpts, _token common.Address) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "finalizeExits", _token)
}

// FinalizeExits is a paid mutator transaction binding the contract method 0x7d7b2051.
//
// Solidity: function finalizeExits(_token address) returns()
func (_RootChain *RootChainSession) FinalizeExits(_token common.Address) (*types.Transaction, error) {
	return _RootChain.Contract.FinalizeExits(&_RootChain.TransactOpts, _token)
}

// FinalizeExits is a paid mutator transaction binding the contract method 0x7d7b2051.
//
// Solidity: function finalizeExits(_token address) returns()
func (_RootChain *RootChainTransactorSession) FinalizeExits(_token common.Address) (*types.Transaction, error) {
	return _RootChain.Contract.FinalizeExits(&_RootChain.TransactOpts, _token)
}

// StartDepositExit is a paid mutator transaction binding the contract method 0xf82f7a4b.
//
// Solidity: function startDepositExit(_depositPos uint256, _token address, _amount uint256) returns()
func (_RootChain *RootChainTransactor) StartDepositExit(opts *bind.TransactOpts, _depositPos *big.Int, _token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "startDepositExit", _depositPos, _token, _amount)
}

// StartDepositExit is a paid mutator transaction binding the contract method 0xf82f7a4b.
//
// Solidity: function startDepositExit(_depositPos uint256, _token address, _amount uint256) returns()
func (_RootChain *RootChainSession) StartDepositExit(_depositPos *big.Int, _token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.Contract.StartDepositExit(&_RootChain.TransactOpts, _depositPos, _token, _amount)
}

// StartDepositExit is a paid mutator transaction binding the contract method 0xf82f7a4b.
//
// Solidity: function startDepositExit(_depositPos uint256, _token address, _amount uint256) returns()
func (_RootChain *RootChainTransactorSession) StartDepositExit(_depositPos *big.Int, _token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.Contract.StartDepositExit(&_RootChain.TransactOpts, _depositPos, _token, _amount)
}

// StartExit is a paid mutator transaction binding the contract method 0x1c91a6b9.
//
// Solidity: function startExit(_utxoPos uint256, _txBytes bytes, _proof bytes, _sigs bytes) returns()
func (_RootChain *RootChainTransactor) StartExit(opts *bind.TransactOpts, _utxoPos *big.Int, _txBytes []byte, _proof []byte, _sigs []byte) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "startExit", _utxoPos, _txBytes, _proof, _sigs)
}

// StartExit is a paid mutator transaction binding the contract method 0x1c91a6b9.
//
// Solidity: function startExit(_utxoPos uint256, _txBytes bytes, _proof bytes, _sigs bytes) returns()
func (_RootChain *RootChainSession) StartExit(_utxoPos *big.Int, _txBytes []byte, _proof []byte, _sigs []byte) (*types.Transaction, error) {
	return _RootChain.Contract.StartExit(&_RootChain.TransactOpts, _utxoPos, _txBytes, _proof, _sigs)
}

// StartExit is a paid mutator transaction binding the contract method 0x1c91a6b9.
//
// Solidity: function startExit(_utxoPos uint256, _txBytes bytes, _proof bytes, _sigs bytes) returns()
func (_RootChain *RootChainTransactorSession) StartExit(_utxoPos *big.Int, _txBytes []byte, _proof []byte, _sigs []byte) (*types.Transaction, error) {
	return _RootChain.Contract.StartExit(&_RootChain.TransactOpts, _utxoPos, _txBytes, _proof, _sigs)
}

// StartFeeExit is a paid mutator transaction binding the contract method 0x40b8d53a.
//
// Solidity: function startFeeExit(_token address, _amount uint256) returns()
func (_RootChain *RootChainTransactor) StartFeeExit(opts *bind.TransactOpts, _token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "startFeeExit", _token, _amount)
}

// StartFeeExit is a paid mutator transaction binding the contract method 0x40b8d53a.
//
// Solidity: function startFeeExit(_token address, _amount uint256) returns()
func (_RootChain *RootChainSession) StartFeeExit(_token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.Contract.StartFeeExit(&_RootChain.TransactOpts, _token, _amount)
}

// StartFeeExit is a paid mutator transaction binding the contract method 0x40b8d53a.
//
// Solidity: function startFeeExit(_token address, _amount uint256) returns()
func (_RootChain *RootChainTransactorSession) StartFeeExit(_token common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _RootChain.Contract.StartFeeExit(&_RootChain.TransactOpts, _token, _amount)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xbaa47694.
//
// Solidity: function submitBlock(_root bytes32) returns()
func (_RootChain *RootChainTransactor) SubmitBlock(opts *bind.TransactOpts, _root [32]byte) (*types.Transaction, error) {
	return _RootChain.contract.Transact(opts, "submitBlock", _root)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xbaa47694.
//
// Solidity: function submitBlock(_root bytes32) returns()
func (_RootChain *RootChainSession) SubmitBlock(_root [32]byte) (*types.Transaction, error) {
	return _RootChain.Contract.SubmitBlock(&_RootChain.TransactOpts, _root)
}

// SubmitBlock is a paid mutator transaction binding the contract method 0xbaa47694.
//
// Solidity: function submitBlock(_root bytes32) returns()
func (_RootChain *RootChainTransactorSession) SubmitBlock(_root [32]byte) (*types.Transaction, error) {
	return _RootChain.Contract.SubmitBlock(&_RootChain.TransactOpts, _root)
}

// RootChainBlockSubmittedIterator is returned from FilterBlockSubmitted and is used to iterate over the raw logs and unpacked data for BlockSubmitted events raised by the RootChain contract.
type RootChainBlockSubmittedIterator struct {
	Event *RootChainBlockSubmitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RootChainBlockSubmittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RootChainBlockSubmitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RootChainBlockSubmitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RootChainBlockSubmittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RootChainBlockSubmittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RootChainBlockSubmitted represents a BlockSubmitted event raised by the RootChain contract.
type RootChainBlockSubmitted struct {
	Root      [32]byte
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterBlockSubmitted is a free log retrieval operation binding the contract event 0x3be20e672590051e92360aa9dd9247e52541ad35d7a0297ff9e0f94e993295e9.
//
// Solidity: e BlockSubmitted(root bytes32, timestamp uint256)
func (_RootChain *RootChainFilterer) FilterBlockSubmitted(opts *bind.FilterOpts) (*RootChainBlockSubmittedIterator, error) {

	logs, sub, err := _RootChain.contract.FilterLogs(opts, "BlockSubmitted")
	if err != nil {
		return nil, err
	}
	return &RootChainBlockSubmittedIterator{contract: _RootChain.contract, event: "BlockSubmitted", logs: logs, sub: sub}, nil
}

// WatchBlockSubmitted is a free log subscription operation binding the contract event 0x3be20e672590051e92360aa9dd9247e52541ad35d7a0297ff9e0f94e993295e9.
//
// Solidity: e BlockSubmitted(root bytes32, timestamp uint256)
func (_RootChain *RootChainFilterer) WatchBlockSubmitted(opts *bind.WatchOpts, sink chan<- *RootChainBlockSubmitted) (event.Subscription, error) {

	logs, sub, err := _RootChain.contract.WatchLogs(opts, "BlockSubmitted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RootChainBlockSubmitted)
				if err := _RootChain.contract.UnpackLog(event, "BlockSubmitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// RootChainDepositIterator is returned from FilterDeposit and is used to iterate over the raw logs and unpacked data for Deposit events raised by the RootChain contract.
type RootChainDepositIterator struct {
	Event *RootChainDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RootChainDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RootChainDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RootChainDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RootChainDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RootChainDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RootChainDeposit represents a Deposit event raised by the RootChain contract.
type RootChainDeposit struct {
	Depositor    common.Address
	DepositBlock *big.Int
	Token        common.Address
	Amount       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterDeposit is a free log retrieval operation binding the contract event 0xd2f8022f659fd9c8c558f30c00fd5ee7038f7cb56da45095c3e0e7d48b3e0c4b.
//
// Solidity: e Deposit(depositor indexed address, depositBlock indexed uint256, token address, amount uint256)
func (_RootChain *RootChainFilterer) FilterDeposit(opts *bind.FilterOpts, depositor []common.Address, depositBlock []*big.Int) (*RootChainDepositIterator, error) {

	var depositorRule []interface{}
	for _, depositorItem := range depositor {
		depositorRule = append(depositorRule, depositorItem)
	}
	var depositBlockRule []interface{}
	for _, depositBlockItem := range depositBlock {
		depositBlockRule = append(depositBlockRule, depositBlockItem)
	}

	logs, sub, err := _RootChain.contract.FilterLogs(opts, "Deposit", depositorRule, depositBlockRule)
	if err != nil {
		return nil, err
	}
	return &RootChainDepositIterator{contract: _RootChain.contract, event: "Deposit", logs: logs, sub: sub}, nil
}

// WatchDeposit is a free log subscription operation binding the contract event 0xd2f8022f659fd9c8c558f30c00fd5ee7038f7cb56da45095c3e0e7d48b3e0c4b.
//
// Solidity: e Deposit(depositor indexed address, depositBlock indexed uint256, token address, amount uint256)
func (_RootChain *RootChainFilterer) WatchDeposit(opts *bind.WatchOpts, sink chan<- *RootChainDeposit, depositor []common.Address, depositBlock []*big.Int) (event.Subscription, error) {

	var depositorRule []interface{}
	for _, depositorItem := range depositor {
		depositorRule = append(depositorRule, depositorItem)
	}
	var depositBlockRule []interface{}
	for _, depositBlockItem := range depositBlock {
		depositBlockRule = append(depositBlockRule, depositBlockItem)
	}

	logs, sub, err := _RootChain.contract.WatchLogs(opts, "Deposit", depositorRule, depositBlockRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RootChainDeposit)
				if err := _RootChain.contract.UnpackLog(event, "Deposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// RootChainExitStartedIterator is returned from FilterExitStarted and is used to iterate over the raw logs and unpacked data for ExitStarted events raised by the RootChain contract.
type RootChainExitStartedIterator struct {
	Event *RootChainExitStarted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RootChainExitStartedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RootChainExitStarted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RootChainExitStarted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RootChainExitStartedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RootChainExitStartedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RootChainExitStarted represents a ExitStarted event raised by the RootChain contract.
type RootChainExitStarted struct {
	Exitor  common.Address
	UtxoPos *big.Int
	Token   common.Address
	Amount  *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterExitStarted is a free log retrieval operation binding the contract event 0xf0537507c0bb9b823a1e4f5522ed9f25512618d4d169c9eb70a5ee2e9fb8bd57.
//
// Solidity: e ExitStarted(exitor indexed address, utxoPos indexed uint256, token address, amount uint256)
func (_RootChain *RootChainFilterer) FilterExitStarted(opts *bind.FilterOpts, exitor []common.Address, utxoPos []*big.Int) (*RootChainExitStartedIterator, error) {

	var exitorRule []interface{}
	for _, exitorItem := range exitor {
		exitorRule = append(exitorRule, exitorItem)
	}
	var utxoPosRule []interface{}
	for _, utxoPosItem := range utxoPos {
		utxoPosRule = append(utxoPosRule, utxoPosItem)
	}

	logs, sub, err := _RootChain.contract.FilterLogs(opts, "ExitStarted", exitorRule, utxoPosRule)
	if err != nil {
		return nil, err
	}
	return &RootChainExitStartedIterator{contract: _RootChain.contract, event: "ExitStarted", logs: logs, sub: sub}, nil
}

// WatchExitStarted is a free log subscription operation binding the contract event 0xf0537507c0bb9b823a1e4f5522ed9f25512618d4d169c9eb70a5ee2e9fb8bd57.
//
// Solidity: e ExitStarted(exitor indexed address, utxoPos indexed uint256, token address, amount uint256)
func (_RootChain *RootChainFilterer) WatchExitStarted(opts *bind.WatchOpts, sink chan<- *RootChainExitStarted, exitor []common.Address, utxoPos []*big.Int) (event.Subscription, error) {

	var exitorRule []interface{}
	for _, exitorItem := range exitor {
		exitorRule = append(exitorRule, exitorItem)
	}
	var utxoPosRule []interface{}
	for _, utxoPosItem := range utxoPos {
		utxoPosRule = append(utxoPosRule, utxoPosItem)
	}

	logs, sub, err := _RootChain.contract.WatchLogs(opts, "ExitStarted", exitorRule, utxoPosRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RootChainExitStarted)
				if err := _RootChain.contract.UnpackLog(event, "ExitStarted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// RootChainTokenAddedIterator is returned from FilterTokenAdded and is used to iterate over the raw logs and unpacked data for TokenAdded events raised by the RootChain contract.
type RootChainTokenAddedIterator struct {
	Event *RootChainTokenAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RootChainTokenAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RootChainTokenAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RootChainTokenAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RootChainTokenAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RootChainTokenAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RootChainTokenAdded represents a TokenAdded event raised by the RootChain contract.
type RootChainTokenAdded struct {
	Token common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterTokenAdded is a free log retrieval operation binding the contract event 0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4.
//
// Solidity: e TokenAdded(token address)
func (_RootChain *RootChainFilterer) FilterTokenAdded(opts *bind.FilterOpts) (*RootChainTokenAddedIterator, error) {

	logs, sub, err := _RootChain.contract.FilterLogs(opts, "TokenAdded")
	if err != nil {
		return nil, err
	}
	return &RootChainTokenAddedIterator{contract: _RootChain.contract, event: "TokenAdded", logs: logs, sub: sub}, nil
}

// WatchTokenAdded is a free log subscription operation binding the contract event 0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4.
//
// Solidity: e TokenAdded(token address)
func (_RootChain *RootChainFilterer) WatchTokenAdded(opts *bind.WatchOpts, sink chan<- *RootChainTokenAdded) (event.Subscription, error) {

	logs, sub, err := _RootChain.contract.WatchLogs(opts, "TokenAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RootChainTokenAdded)
				if err := _RootChain.contract.UnpackLog(event, "TokenAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
